@model car_rental_Unicom.tic.Vew_modal.home_view_modal

@{
    ViewData["Title"] = "Book Car";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<!-- Flatpickr CSS -->
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />

<!-- jQuery -->
<script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
<!-- Bootstrap Bundle JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<style>
    /* Optional: z-index fix if Flatpickr calendar goes behind modal or other elements */
    .flatpickr-calendar {
        z-index: 1050 !important;
    }
    /* Style booked dates */
    .flatpickr-day.booked-date {
        background: #ff6b6b !important;
        color: white !important;
        cursor: not-allowed;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Book Car</h3>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <img src="@Model.image_path" class="img-fluid rounded" alt="@Model.Car_modalName" />
                        </div>
                        <div class="col-md-8">
                            <h5>@Model.Car_modalName (@Model.year)</h5>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Number Plate: <strong>@Model.number_plact</strong></li>
                                <li class="list-group-item">AC: <strong>@Model.ac</strong></li>
                                <li class="list-group-item">Top Speed: <strong>@Model.top_speed</strong></li>
                                <li class="list-group-item">Gear System: <strong>@Model.Gear_System</strong></li>
                                <li class="list-group-item">Milage: <strong>@Model.milage</strong></li>
                                <li class="list-group-item">Status: <strong>@Model.car_status</strong></li>
                                <li class="list-group-item">Maintenance Charge: <strong>@Model.MaintenanceCharge</strong></li>
                                <li class="list-group-item">Rent Per Day: <strong>@Model.RentPerDay</strong></li>
                            </ul>
                        </div>
                    </div>

                    <!-- Booking Form -->
                    <form asp-action="AddBooking" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <input type="hidden" asp-for="CarId" />

                        <div class="mb-3">
                            <label asp-for="licence_number" class="form-label">License Number</label>
                            <input asp-for="licence_number" class="form-control" required />
                            <span asp-validation-for="licence_number" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="start_date" class="form-label">Start Date</label>
                            <div class="input-group">
                                <input asp-for="start_date" type="text" class="form-control" id="startDate" autocomplete="off" placeholder="Select start date" required />
                                <span class="input-group-text" style="cursor: pointer;" tabindex="0" id="calendarIcon">
                                    <i class="bi bi-calendar-date"></i>
                                </span>
                            </div>
                            <span asp-validation-for="start_date" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="dayes" class="form-label">Number of Days</label>
                            <input asp-for="dayes" type="number" class="form-control" min="1" required />
                            <span asp-validation-for="dayes" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-success">Book Now</button>
                            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Fetch booked dates from server
            $.get('@Url.Action("GetBookedDates", "Home", new { carId = Model.CarId })', function (bookedDates) {
                // Convert booked dates array to a Set for fast lookup
                const bookedSet = new Set(bookedDates);

                // Initialize flatpickr on startDate input
                const fp = flatpickr("#startDate", {
                    dateFormat: "Y-m-d",
                    minDate: "today",
                    maxDate: new Date(new Date().setMonth(new Date().getMonth() + 2)), // 2 months from today
                    disable: [
                        function (date) {
                            // Disable dates that are booked
                            const y = date.getFullYear();
                            const m = (date.getMonth() + 1).toString().padStart(2, '0');
                            const d = date.getDate().toString().padStart(2, '0');
                            const dateStr = `${y}-${m}-${d}`;
                            return bookedSet.has(dateStr);
                        }
                    ],
                    onReady: function (selectedDates, dateStr, instance) {
                        // Add custom class to disabled booked dates for styling
                        instance.days.forEach(dayElem => {
                            if (dayElem.dateObj && bookedSet.has(instance.formatDate(dayElem.dateObj, "Y-m-d"))) {
                                dayElem.classList.add('booked-date');
                                dayElem.title = "Booked";
                            }
                        });
                    },
                });

                // Open datepicker when calendar icon is clicked or keyboard key pressed
                $('#calendarIcon').on('click keypress', function (e) {
                    if (e.type === 'click' || e.which === 13 || e.which === 32) {
                        fp.open();
                    }
                });
            });
        });
    </script>
}
