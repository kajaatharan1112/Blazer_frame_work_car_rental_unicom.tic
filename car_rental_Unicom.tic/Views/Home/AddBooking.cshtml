@model car_rental_Unicom.tic.Vew_modal.home_view_modal

@{
    ViewData["Title"] = "Book Car";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<!-- Flatpickr CSS -->
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />

<!-- jQuery -->
<script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
<!-- Bootstrap Bundle JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #c3ecff 0%, #ffffff 100%);
    }

    /* Glass-card style */
    .glass-card {
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        padding: 2rem;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }

    /* Buttons */
    .btn-primary, .btn-success, .btn-secondary {
        border-radius: 50px;
        transition: background-color 0.3s;
    }

        .btn-primary:hover, .btn-success:hover {
            background-color: #159ec6;
        }

        .btn-secondary:hover {
            background-color: #6c757d;
        }

    /* Input wrapper with icon */
    .input-icon-wrapper {
        position: relative;
        margin-bottom: 1rem;
    }

        .input-icon-wrapper i {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #aaa;
        }

        .input-icon-wrapper input, .input-icon-wrapper select {
            padding-left: 2.5rem;
        }

    /* Focus glow */
    input:focus, select:focus {
        border-color: #1CB5E0;
        box-shadow: 0 0 8px rgba(28, 181, 224, 0.5);
        outline: none;
    }

    /* Shake animation */
    .shake {
        animation: shake 0.3s;
        border-color: #e74c3c;
    }
    @@keyframes shake {
        0%

    {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-5px);
    }

    50% {
        transform: translateX(5px);
    }

    75% {
        transform: translateX(-5px);
    }

    100% {
        transform: translateX(0);
    }

    }

    /* Flatpickr z-index */
    .flatpickr-calendar {
        z-index: 1050 !important;
    }

    .flatpickr-day.booked-date {
        background: #ff6b6b !important;
        color: white !important;
        cursor: not-allowed;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="glass-card">
                <!-- Car Details -->
                <div class="row mb-4">
                    <div class="col-md-4">
                        <img src="@Model.image_path" class="img-fluid rounded" alt="@Model.Car_modalName" />
                    </div>
                    <div class="col-md-8">
                        <h5>@Model.Car_modalName (@Model.year)</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Number Plate: <strong>@Model.number_plact</strong></li>
                            <li class="list-group-item">AC: <strong>@Model.ac</strong></li>
                            <li class="list-group-item">Top Speed: <strong>@Model.top_speed</strong></li>
                            <li class="list-group-item">Gear System: <strong>@Model.Gear_System</strong></li>
                            <li class="list-group-item">Milage: <strong>@Model.milage</strong></li>
                            <li class="list-group-item">Status: <strong>@Model.car_status</strong></li>
                            <li class="list-group-item">Maintenance Charge: <strong>@Model.MaintenanceCharge</strong></li>
                            <li class="list-group-item">Rent Per Day: <strong>@Model.RentPerDay</strong></li>
                        </ul>
                    </div>
                </div>

                <!-- Booking Form -->
                <form asp-action="AddBooking" method="post" id="bookingForm">
                    <input type="hidden" asp-for="CarId" />

                    <div class="input-icon-wrapper">
                        <i class="bi bi-card-text"></i>
                        <input asp-for="licence_number" class="form-control" placeholder="License Number" required />
                        <span asp-validation-for="licence_number" class="text-danger"></span>
                    </div>

                    <div class="input-icon-wrapper">
                        <i class="bi bi-calendar-date"></i>
                        <input asp-for="start_date" type="text" class="form-control" id="startDate" placeholder="Select start date" autocomplete="off" required />
                    </div>

                    <div class="input-icon-wrapper">
                        <i class="bi bi-calendar-day"></i>
                        <input asp-for="dayes" type="number" class="form-control" min="1" placeholder="Number of Days" required />
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <button type="submit" class="btn btn-success">Book Now</button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Fetch booked dates from server
            $.get('@Url.Action("GetBookedDates", "Home", new { carId = Model.CarId })', function (bookedDates) {
                const bookedSet = new Set(bookedDates);

                // Initialize flatpickr
                const fp = flatpickr("#startDate", {
                    dateFormat: "Y-m-d",
                    minDate: "today",
                    maxDate: new Date(new Date().setMonth(new Date().getMonth() + 2)),
                    disable: [
                        function (date) {
                            const y = date.getFullYear();
                            const m = (date.getMonth() + 1).toString().padStart(2, '0');
                            const d = date.getDate().toString().padStart(2, '0');
                            return bookedSet.has(`${y}-${m}-${d}`);
                        }
                    ],
                    onReady: function (_, __, instance) {
                        instance.days.forEach(dayElem => {
                            if (dayElem.dateObj && bookedSet.has(instance.formatDate(dayElem.dateObj, "Y-m-d"))) {
                                dayElem.classList.add('booked-date');
                                dayElem.title = "Booked";
                            }
                        });
                    },
                });

                // Calendar icon click opens datepicker
                $('#calendarIcon').on('click keypress', function (e) {
                    if (e.type === 'click' || e.which === 13 || e.which === 32) fp.open();
                });
            });

            // Real-time validation example
            $('#bookingForm input[required]').on('input', function () {
                if (!this.checkValidity()) $(this).addClass('shake');
                else $(this).removeClass('shake');
            });
        });
    </script>
}
